GDS Go Workshop #1
15:30 24 Nov 2016

Tim Blair

Alex Tomlins

* Introduction

Aim of this workshop:

A chance for people to work through some problems together and learn from each
other.

* Hello world

.play 01/hello.go

* Hello world (with added test)

.code 01/hello/hello.go /START OMIT/,/END OMIT/

.code 01/hello/hello_test.go

* Exercise

.image 01/tweet.png

* Exercise - Latency as a Service

We're going to build a microservice to provide latency.

Stdlib packages that will be useful:

- net/http (start with the `ListenAndServe` function)
- time

Package documentation can be found at [[https://godoc.org/net/http]] etc

We've put together a quick cheatsheet here: [[http://bit.ly/gds-go1]]

* Exercise - Latency as a Service

- GET `/latency` - returns the string "OK" after 500ms
- GET `/latency?duration=100ms` - override the default delay duration. The value can be any string accepted by `time.ParseDuration`.
- An invalid duration parameter should return a 400 along with an error message.

Stretch goals:

- Add tests

* JSON package intro

Marshalling a struct to JSON:

.play 01/json1.go /START OMIT/,/END OMIT/

* JSON package intro

More control of JSON output

.play 01/json2.go /START OMIT/,/END OMIT/

* JSON package intro

For more details:

- package docs - [[https://godoc.org/encoding/json]]
- [[https://blog.golang.org/json-and-go]]
- [[https://eager.io/blog/go-and-json/]]
- [[https://gobyexample.com/json]]

Links are also included at the bottom of the cheatsheet ([[http://bit.ly/gds-go1]])

* Exercise - Dice as a Service

- GET `/roll` generates a random roll from a D6 die.
- GET `/roll?die=D<N>` (where N is a positive integer)
- Both calls return JSON including the die type, and the random roll from the die.
- Invalid parameters return a 400 and suitable JSON encoded error message.
- It should have tests

Stretch goals:

- Write a separate command line client for accessing your service.
- Allow a user to pass multiple dice and roll them all.

Useful packages:

- `encoding/json`
- `math/rand`

* End

What should we cover next time?
